{"version":3,"file":"static/js/505.652afdd3.chunk.js","mappings":"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","sources":["hooks/notification.tsx","services/interceptors/index.ts","services/login-services/index.ts","utils/endpoints.ts","components/header/index.tsx","store/user/userActions.ts","components/common/Paginator.tsx","services/user-services/index.ts","components/users/create-user/index.tsx","components/users/card-list/index.tsx","components/users/table-header/index.tsx","components/users/user-list/index.tsx","components/users/index.tsx"],"sourcesContent":["import { notification } from \"antd\";\r\n\r\ntype NotificationType = 'success' | 'info' | 'warning' | 'error';\r\n\r\nexport function useAppNotification() {\r\n\tconst [api, contextHolder] = notification.useNotification();\r\n\r\n\tconst open = (\r\n\t\ttype: NotificationType,\r\n\t\topts?: { message?: string; description?: string; duration?: number }\r\n\t) => {\r\n\t\tapi[type]({\r\n\t\t\tmessage: opts?.message ?? \"Notification\",\r\n\t\t\tdescription: opts?.description ?? \"\",\r\n\t\t\tduration: opts?.duration ?? 4.5,\r\n\t\t});\r\n\t};\r\n\r\n\treturn { api, contextHolder, open };\r\n}","import axios from \"axios\";\r\nimport { logout } from \"../login-services\";\r\nimport Constants from \"../../utils/constants\";\r\n\r\n//creating a common interceptor\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\n// Request Interceptor: Add Authorization token to headers\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(Constants.TOKEN_KEY);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n    config.headers[\"x-api-key\"] = process.env.REACT_APP_API_KEY || \"\";\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response Interceptor: Handle global errors (e.g., 401 Unauthorized)\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.log(\"Unauthorized request, redirecting to login...\");\r\n      logout();\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { LoginPayload } from \"../../model/Login\";\r\nimport Constants from \"../../utils/constants\";\r\nimport Endpoints from \"../../utils/endpoints\";\r\nimport axiosInstance from \"../interceptors\";\r\n\r\n//API call with promise handle & error handling\r\nconst handleLogin = (loginData: LoginPayload): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosInstance\r\n      .post(Endpoints.login, loginData)\r\n      .then((response) => {\r\n        const token = response?.data?.token;\r\n        if (token) {\r\n          localStorage.setItem(Constants.TOKEN_KEY, token);\r\n          localStorage.setItem(\"user\", JSON.stringify(loginData.username));\r\n          resolve(token);\r\n        } else {\r\n          reject(new Error(\"Login succeeded but no token returned\"));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n//create new user API call\r\nconst createUser = (payload: {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  avatar: string;\r\n}): Promise<any> => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosInstance\r\n      .post(Endpoints.users, { data: payload })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n//logout api call\r\nconst logout = (): void => {\r\n  axiosInstance\r\n    .post(Endpoints.logout)\r\n    .then(() => {\r\n      localStorage.removeItem(Constants.TOKEN_KEY);\r\n      window.location.href = \"https://dineshkumarrangasamy1998.github.io/mallow_react_task_dineshkumar/\";\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Logout failed:\", error);\r\n    });\r\n};\r\n\r\nexport { handleLogin, createUser, logout };\r\n","// API endpoints\r\nconst Endpoints = {\r\n  login: \"/login\",\r\n  users: \"/users\",\r\n  logout: \"/logout\",\r\n};\r\n\r\nexport default Endpoints;\r\n","import { LogoutOutlined } from \"@ant-design/icons\";\r\nimport { Button, Row, Col, Tooltip } from \"antd\";\r\nimport React from \"react\";\r\nimport { logout } from \"../../services/login-services\";\r\n\r\nconst Header: React.FC = () => {\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  //fetch user data\r\n  const userStr = localStorage.getItem(\"user\");\r\n  const userName = userStr ? JSON.parse(userStr) : \"User\";\r\n\r\n  return (\r\n    <header>\r\n      <Row\r\n        justify=\"end\"\r\n        align=\"middle\"\r\n        className=\"header\"\r\n        style={{ padding: 20 }}\r\n      >\r\n        <Col>\r\n          <div className=\"logout-btn\" onClick={() => handleLogout()}>\r\n            <Tooltip title=\"Logout\">\r\n              <span>{userName}</span>\r\n            </Tooltip>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<LogoutOutlined />}\r\n              danger\r\n              size=\"small\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleLogout();\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axiosInstance from \"../../services/interceptors\";\r\nimport Endpoints from \"../../utils/endpoints\";\r\nimport {\r\n  fetchUserList,\r\n  fetchUserListFailure,\r\n  fetchUserListStart,\r\n} from \"./userSlice\";\r\nimport { changePagination } from \"./userSlice\";\r\nimport { AppDispatch } from \"../store\";\r\n\r\n//load user data\r\nexport const loadUsers =\r\n  (page: number, pageSize: number) => async (dispatch: AppDispatch) => {\r\n    dispatch(fetchUserListStart());\r\n    try {\r\n      const res = await axiosInstance.get(Endpoints.users, {\r\n        params: { page: page, per_page: pageSize },\r\n      });\r\n      dispatch(fetchUserList(res.data.data));\r\n      dispatch(\r\n        changePagination({\r\n          current: page,\r\n          pageSize,\r\n          total: res.data.total ?? res.data.data.length,\r\n        })\r\n      );\r\n    } catch (error: any) {\r\n      dispatch(fetchUserListFailure(error.message));\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport { Pagination } from \"antd\";\r\nimport { AppDispatch, RootState } from \"../../store/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changePagination } from \"../../store/user/userSlice\";\r\nimport { loadUsers } from \"../../store/user/userActions\";\r\n\r\n// common pagination\r\nconst Paginator: React.FC = () => {\r\n  const userState = useSelector((state: RootState) => state.usersReducer);\r\n  const { current, pageSize, total } = userState.pagination;\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const onHandleChange = (page: number, pageSize?: number) => {\r\n    dispatch(\r\n      changePagination({ current: page, pageSize: pageSize || 5, total: total })\r\n    );\r\n    dispatch(loadUsers(page, pageSize || 5));\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 16, textAlign: \"center\" }}>\r\n      <Pagination\r\n        current={current}\r\n        pageSize={pageSize}\r\n        total={total}\r\n        onChange={onHandleChange}\r\n        showSizeChanger={false}\r\n        simple={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import axiosInstance from \"../interceptors\";\r\nimport Endpoints from \"../../utils/endpoints\";\r\n\r\n//delete user API call\r\nconst deleteUser = (id: number): Promise<void> => {\r\n  return axiosInstance\r\n    .delete(`${Endpoints.users}/${id}`)\r\n    .then(() => {\r\n      console.log(`User with ID ${id} deleted successfully.`);\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n\r\nexport { deleteUser };\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Button, Flex, Form, Input, Modal } from \"antd\";\r\nimport { createUser } from \"../../../services/login-services\";\r\nimport { AppDispatch } from \"../../../store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadUsers } from \"../../../store/user/userActions\";\r\nimport axiosInstance from \"../../../services/interceptors\";\r\nimport {\r\n  disableLoading,\r\n  fetchUserListStart,\r\n} from \"../../../store/user/userSlice\";\r\nimport Endpoints from \"../../../utils/endpoints\";\r\nimport { CreateUserProps, UserPayload } from \"../../../model/userType\";\r\nimport { useAppNotification } from \"../../../hooks/notification\";\r\n\r\nconst CreateUser: React.FC<CreateUserProps> = ({\r\n  isVisible,\r\n  handleModalClose,\r\n  userData,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { contextHolder, open } = useAppNotification();\r\n\r\n  //callback for dependency\r\n  const getUserById = useCallback(\r\n    (id: number) => {\r\n      dispatch(fetchUserListStart());\r\n      axiosInstance\r\n        .get(`${Endpoints.users}/${id}`)\r\n        .then((response) => {\r\n          const user = response.data.data;\r\n          form.setFieldsValue({\r\n            fname: user.first_name,\r\n            lname: user.last_name,\r\n            email: user.email,\r\n            profileUrl: user.avatar,\r\n          });\r\n        })\r\n        .finally(() => {\r\n          dispatch(disableLoading());\r\n        });\r\n    },\r\n    [dispatch, form]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsModalOpen(isVisible);\r\n    if (userData && isVisible) {\r\n      setIsEditMode(true);\r\n      getUserById(userData);\r\n    } else {\r\n      setIsEditMode(false);\r\n      form.resetFields();\r\n    }\r\n  }, [isVisible, userData, getUserById, form]);\r\n\r\n  //after form submit based the editMode state, if update / new\r\n  const finished = (values: any) => {\r\n    dispatch(fetchUserListStart());\r\n    let payload: UserPayload = {\r\n      email: values.email,\r\n      first_name: values.fname,\r\n      last_name: values.lname,\r\n      avatar: values.profileUrl,\r\n    };\r\n    if (isEditMode) {\r\n      payload = { ...payload, id: userData ?? undefined };\r\n      axiosInstance\r\n        .put(`${Endpoints.users}/${userData}`, payload)\r\n        .then((response) => {\r\n          if (response && response.data) {\r\n            open(\"success\", {\r\n              message: \"User updated successfully\",\r\n              description: `User ${response.data.first_name} ${response.data.last_name} has been updated.`,\r\n            });\r\n            dispatch(loadUsers(1, 5));\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          open(\"error\", { message: \"Error updating user\" });\r\n          console.error(\"Error updating user:\", error);\r\n        })\r\n        .finally(() => {\r\n          dispatch(disableLoading());\r\n          setIsModalOpen(false);\r\n          handleModalClose();\r\n          form.resetFields();\r\n        });\r\n    } else {\r\n      createUser(payload)\r\n        .then((response) => {\r\n          if (response && response.data) {\r\n            open(\"success\", {\r\n              message: \"User created successfully\",\r\n              description: `User ${response.data.first_name} ${response.data.last_name} has been created.`,\r\n            });\r\n            dispatch(loadUsers(1, 5));\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          open(\"error\", { message: \"Error creating user\" });\r\n          console.error(\"Error creating user:\", error);\r\n        })\r\n        .finally(() => {\r\n          dispatch(disableLoading());\r\n          setIsModalOpen(false);\r\n          handleModalClose();\r\n          form.resetFields();\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    handleModalClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title={isEditMode ? \"Edit User\" : \"Create New User\"}\r\n        open={isModalOpen}\r\n        forceRender\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          autoComplete=\"off\"\r\n          onFinish={finished}\r\n        >\r\n          {/* First Name */}\r\n          <Form.Item\r\n            name=\"fname\"\r\n            label=\"First Name\"\r\n            normalize={(v) => (typeof v === \"string\" ? v.trim() : v)}\r\n            rules={[\r\n              { required: true, message: \"Please enter first name\" },\r\n              { min: 2, message: \"First name must be at least 2 characters\" },\r\n              { max: 50, message: \"First name cannot exceed 50 characters\" },\r\n              {\r\n                pattern: /^[A-Za-z\\s.'-]+$/,\r\n                message: \"First name contains invalid characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please enter first name\" maxLength={50} />\r\n          </Form.Item>\r\n\r\n          {/* Last Name */}\r\n          <Form.Item\r\n            name=\"lname\"\r\n            label=\"Last Name\"\r\n            normalize={(v) => (typeof v === \"string\" ? v.trim() : v)}\r\n            rules={[\r\n              { required: true, message: \"Please enter last name\" },\r\n              { min: 1, message: \"Last name must be at least 1 character\" },\r\n              { max: 50, message: \"Last name cannot exceed 50 characters\" },\r\n              {\r\n                pattern: /^[A-Za-z\\s.'-]+$/,\r\n                message: \"Last name contains invalid characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please enter last name\" maxLength={50} />\r\n          </Form.Item>\r\n\r\n          {/* Email */}\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            normalize={(v) => (typeof v === \"string\" ? v.trim() : v)}\r\n            rules={[\r\n              { required: true, message: \"Please enter email\" },\r\n              { type: \"email\", message: \"Please enter a valid email address\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please enter email\" maxLength={254} />\r\n          </Form.Item>\r\n\r\n          {/* Profile Image Url */}\r\n          <Form.Item\r\n            name=\"profileUrl\"\r\n            label=\"Profile Image Url\"\r\n            normalize={(v) => (typeof v === \"string\" ? v.trim() : v)}\r\n            rules={[\r\n              { required: true, message: \"Please enter profile image URL\" },\r\n              {\r\n                validator: (_, value) => {\r\n                  if (!value)\r\n                    return Promise.reject(\r\n                      new Error(\"Please enter profile image URL\")\r\n                    );\r\n                  try {\r\n                    const u = new URL(value);\r\n                    if (u.protocol === \"http:\" || u.protocol === \"https:\") {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\"URL must start with http:// or https://\")\r\n                    );\r\n                  } catch {\r\n                    return Promise.reject(\r\n                      new Error(\"Please enter a valid URL\")\r\n                    );\r\n                  }\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder=\"Please enter profile image URL\"\r\n              maxLength={2048}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Flex gap={10} justify=\"flex-end\" align=\"center\">\r\n            <Button onClick={handleCancel}>Cancel</Button>\r\n            <Button htmlType=\"submit\" type=\"primary\">\r\n              {isEditMode ? \"Update\" : \"Submit\"}\r\n            </Button>\r\n          </Flex>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Space, Flex, Button } from \"antd\";\r\nimport Paginator from \"../../common/Paginator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../../store/store\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { deleteUser } from \"../../../services/user-services\";\r\nimport { loadUsers } from \"../../../store/user/userActions\";\r\nimport {\r\n  disableLoading,\r\n  fetchUserListStart,\r\n} from \"../../../store/user/userSlice\";\r\nimport CreateUser from \"../create-user\";\r\nimport { User } from \"../../../model/userType\";\r\nimport { useAppNotification } from \"../../../hooks/notification\";\r\n\r\nconst CardUserList: React.FC = () => {\r\n  const [data, setData] = useState<User[]>([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\r\n\r\n  const userState = useSelector((state: RootState) => state.usersReducer);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { contextHolder, open } = useAppNotification();\r\n\r\n  useEffect(() => {\r\n    setData(userState.users);\r\n  }, [userState]);\r\n\r\n  //handled edit based on id and API\r\n  const handleEdit = (id: number) => {\r\n    setVisible(true);\r\n    setSelectedUserId(id);\r\n  };\r\n\r\n  //handled delete based on id\r\n  const handleDelete = (id: number) => {\r\n    dispatch(fetchUserListStart());\r\n    deleteUser(id)\r\n      .then(() => {\r\n        open(\"success\", { message: \"User deleted successfully\" });\r\n        dispatch(\r\n          loadUsers(userState.pagination.current, userState.pagination.pageSize)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        open(\"error\", { message: \"Error deleting user\" });\r\n        console.error(\"Error deleting user:\", error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(disableLoading());\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Space\r\n      direction=\"vertical\"\r\n      style={{ padding: 20, backgroundColor: \"#f0f2f5\", width: \"100%\" }}\r\n      size=\"large\"\r\n    >\r\n      {contextHolder}\r\n      <Flex wrap=\"wrap\" gap={30} justify=\"center\">\r\n        {data.map((user) => (\r\n          <div\r\n            key={user.id}\r\n            style={{\r\n              background: \"#fff\",\r\n              padding: 20,\r\n              borderRadius: 8,\r\n              minWidth: 400,\r\n              textAlign: \"center\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                src={user.avatar}\r\n                alt=\"avatar\"\r\n                style={{\r\n                  width: 100,\r\n                  height: 100,\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              />\r\n              <h3>{`${user.first_name} ${user.last_name}`}</h3>\r\n              <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"card-hover\">\r\n              <Flex\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                gap={10}\r\n                style={{ marginTop: 10 }}\r\n              >\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  size=\"large\"\r\n                  onClick={() => handleEdit(user.id)}\r\n                  style={{ backgroundColor: \"#b37feb\" }}\r\n                  icon={<EditOutlined />}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  danger\r\n                  shape=\"circle\"\r\n                  size=\"large\"\r\n                  onClick={() => handleDelete(user.id)}\r\n                  icon={<DeleteOutlined />}\r\n                />\r\n              </Flex>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Flex>\r\n      <Flex justify=\"flex-end\" align=\"center\" style={{ padding: 20 }}>\r\n        <Paginator />\r\n      </Flex>\r\n      <CreateUser\r\n        isVisible={visible}\r\n        handleModalClose={() => setVisible(false)}\r\n        userData={selectedUserId}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default CardUserList;\r\n","import { Button, Flex, Form, Input, Radio } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { TableOutlined, UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../../../store/store\";\r\nimport {\r\n  changeGridView,\r\n  changeSearchText,\r\n} from \"../../../store/user/userSlice\";\r\nimport { loadUsers } from \"../../../store/user/userActions\";\r\nimport CreateUser from \"../create-user\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport Constants from \"../../../utils/constants\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst TableHeader: React.FC = () => {\r\n  const [tableLayout, setTableLayout] = React.useState<\"table\" | \"card\">(\r\n    \"table\"\r\n  );\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [searchText, setSearchText] = useState<string>(\"\");\r\n\r\n  //implemented debounce for searchText\r\n  const [debouncedSearch] = useDebounce(searchText, Constants.DEBOUNCE_DELAY);\r\n  const skipNextDebounce = useRef(false);\r\n\r\n  const userState = useSelector((state: RootState) => state.usersReducer);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  useEffect(() => {\r\n    userState.gridView ? setTableLayout(\"card\") : setTableLayout(\"table\");\r\n  }, [userState.gridView]);\r\n\r\n  useEffect(() => {\r\n    if (skipNextDebounce.current) {\r\n      skipNextDebounce.current = false;\r\n      return;\r\n    }\r\n    dispatch(changeSearchText(debouncedSearch));\r\n  }, [debouncedSearch, dispatch]);\r\n\r\n  const handleTableLayoutChange = (e: any) => {\r\n    const newLayout = e.target.value;\r\n    setTableLayout(newLayout);\r\n    dispatch(changeGridView(newLayout === \"card\"));\r\n  };\r\n\r\n  const onSearch = (value: string) => {\r\n    dispatch(changeSearchText(value));\r\n    if (!value) {\r\n      dispatch(loadUsers(1, userState.pagination.pageSize ?? 5));\r\n    }\r\n  };\r\n\r\n  const onSearchImmediate = (value: string) => {\r\n    skipNextDebounce.current = true;\r\n    setSearchText(value);\r\n    onSearch(value);\r\n  };\r\n\r\n  const onCreateNewUser = (value: boolean) => {\r\n    setVisible(value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Flex\r\n        justify=\"space-between\"\r\n        align=\"center\"\r\n        style={{ padding: 20, backgroundColor: \"#fff\" }}\r\n      >\r\n        <h2>Users</h2>\r\n        <Flex gap={10}>\r\n          <Search\r\n            placeholder=\"Search users\"\r\n            onSearch={onSearchImmediate}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setSearchText(e.target.value)\r\n            }\r\n            enterButton\r\n            allowClear\r\n            style={{ maxWidth: 300 }}\r\n            value={searchText}\r\n          />\r\n          <Button type=\"primary\" onClick={() => onCreateNewUser(true)}>\r\n            Add User\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n      <Flex\r\n        justify=\"flex-start\"\r\n        align=\"center\"\r\n        style={{ paddingRight: 20, paddingLeft: 20 }}\r\n      >\r\n        <Form.Item>\r\n          <Radio.Group value={tableLayout} onChange={handleTableLayoutChange}>\r\n            <Radio.Button value=\"table\">\r\n              <TableOutlined /> Table\r\n            </Radio.Button>\r\n            <Radio.Button value=\"card\">\r\n              <UnorderedListOutlined /> Card\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n      </Flex>\r\n      <CreateUser\r\n        isVisible={visible}\r\n        handleModalClose={() => setVisible(false)}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Space, Flex, Button } from \"antd\";\r\nimport type { ColumnsType } from \"antd/es/table\";\r\nimport Paginator from \"../../common/Paginator\";\r\nimport { User } from \"../../../model/userType\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../../store/store\";\r\nimport CreateUser from \"../create-user\";\r\nimport {\r\n  disableLoading,\r\n  fetchUserListStart,\r\n} from \"../../../store/user/userSlice\";\r\nimport { deleteUser } from \"../../../services/user-services\";\r\nimport { loadUsers } from \"../../../store/user/userActions\";\r\nimport { useAppNotification } from \"../../../hooks/notification\";\r\n\r\nconst UserList: React.FC = () => {\r\n  const [data, setData] = useState<User[]>([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\r\n\r\n  //get the user state from the redux store\r\n  const userState = useSelector((state: RootState) => state.usersReducer);\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const { contextHolder, open } = useAppNotification();\r\n\r\n  useEffect(() => {\r\n    setData(userState.users);\r\n  }, [userState]);\r\n\r\n  //open the edit modal and set the selected user id\r\n  const handleEdit = (id: number) => {\r\n    setVisible(true);\r\n    setSelectedUserId(id);\r\n  };\r\n\r\n  //delete the user based on id\r\n  const handleDelete = (id: number) => {\r\n    dispatch(fetchUserListStart());\r\n    deleteUser(id)\r\n      .then(() => {\r\n        open(\"success\", {\r\n          message: \"User deleted successfully\",\r\n          description: `User with ID ${id} has been deleted.`,\r\n        });\r\n        dispatch(\r\n          loadUsers(userState.pagination.current, userState.pagination.pageSize)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        open(\"error\", { message: \"Error deleting user\" });\r\n        console.error(\"Error deleting user:\", error);\r\n      })\r\n      .finally(() => {\r\n        dispatch(disableLoading());\r\n      });\r\n  };\r\n\r\n  // handle table change for sorting\r\n  const handleTableChange = (_pagination: any, _filters: any, sorter: any) => {\r\n    if (!sorter || !sorter.order) {\r\n      setData(userState.users);\r\n      return;\r\n    }\r\n\r\n    const field = (sorter.field as keyof User) || sorter.columnKey;\r\n    const order = sorter.order; // 'ascend' | 'descend'\r\n\r\n    const sorted = [...userState.users].sort((a, b) => {\r\n      const aVal = (a[field] ?? \"\") as any;\r\n      const bVal = (b[field] ?? \"\") as any;\r\n\r\n      if (typeof aVal === \"string\" && typeof bVal === \"string\") {\r\n        return aVal.toLowerCase().localeCompare(bVal.toLowerCase());\r\n      }\r\n      if (typeof aVal === \"number\" && typeof bVal === \"number\") {\r\n        return aVal - bVal;\r\n      }\r\n      return String(aVal).localeCompare(String(bVal));\r\n    });\r\n\r\n    if (order === \"descend\") sorted.reverse();\r\n    setData(sorted);\r\n  };\r\n\r\n  const columns: ColumnsType<User> = [\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"avatar\",\r\n      render: (url: string) => (\r\n        <img\r\n          src={url}\r\n          alt=\"avatar\"\r\n          style={{ width: 40, borderRadius: \"50%\", marginLeft: 60 }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: true,\r\n      render: (text, record) => (\r\n        <div\r\n          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n        >{`${record.email}`}</div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"First Name\",\r\n      dataIndex: \"first_name\",\r\n      sorter: true,\r\n      render: (text, record) => <div>{`${record.first_name}`}</div>,\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      dataIndex: \"last_name\",\r\n      sorter: true,\r\n      render: (text, record) => <div>{`${record.last_name}`}</div>,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      sorter: false,\r\n      dataIndex: \"id\",\r\n      render: (id: number) => (\r\n        <Flex justify=\"center\" align=\"center\" gap={10}>\r\n          <Button type=\"primary\" onClick={() => handleEdit(id)}>\r\n            Edit\r\n          </Button>\r\n          <Button type=\"primary\" danger onClick={() => handleDelete(id)}>\r\n            Delete\r\n          </Button>\r\n        </Flex>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n      {/* render the notification context holder once inside your component tree */}\r\n      {contextHolder}\r\n      <Table<User>\r\n        rowKey=\"id\"\r\n        columns={columns}\r\n        dataSource={data}\r\n        pagination={false}\r\n        onChange={handleTableChange}\r\n      />\r\n      <Flex justify=\"flex-end\" align=\"center\">\r\n        <Paginator />\r\n      </Flex>\r\n      <CreateUser\r\n        isVisible={visible}\r\n        handleModalClose={() => setVisible(false)}\r\n        userData={selectedUserId}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Header from \"../header\";\r\nimport CardUserList from \"./card-list\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadUsers } from \"../../store/user/userActions\";\r\nimport { AppDispatch, RootState } from \"../../store/store\";\r\nimport TableHeader from \"./table-header\";\r\nimport UserList from \"./user-list\";\r\nimport FullPageLoader from \"../common/Loader\";\r\n\r\nconst Users: React.FC = () => {\r\n  //initial data load\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const userState = useSelector((state: RootState) => state.usersReducer);\r\n\r\n  const didFetchRef = useRef(false);\r\n\r\n  // to avoid multiple fetches using values from store\r\n  useEffect(() => {\r\n    if (didFetchRef.current) return;\r\n    didFetchRef.current = true;\r\n    dispatch(\r\n      loadUsers(userState.pagination.current, userState.pagination.pageSize)\r\n    );\r\n  }, [dispatch, userState.pagination]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <TableHeader />\r\n      <div\r\n        style={{ padding: 40, backgroundColor: \"#f0f2f5\", minHeight: \"100vh\" }}\r\n      >\r\n        {userState.gridView ? <CardUserList /> : <UserList />}\r\n      </div>\r\n      <FullPageLoader visible={userState.loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["useAppNotification","api","contextHolder","notification","useNotification","open","type","opts","_opts$message","_opts$description","_opts$duration","message","description","duration","axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","Constants","TOKEN_KEY","headers","Authorization","concat","error","Promise","reject","response","status","console","log","logout","handleLogin","loginData","resolve","post","Endpoints","login","then","_response$data","data","setItem","JSON","stringify","username","Error","catch","createUser","payload","users","removeItem","window","location","href","Header","handleLogout","userStr","userName","parse","_jsx","children","Row","justify","align","className","style","padding","Col","_jsxs","onClick","Tooltip","title","Button","icon","LogoutOutlined","danger","size","e","stopPropagation","loadUsers","page","pageSize","async","dispatch","fetchUserListStart","_res$data$total","res","get","params","per_page","fetchUserList","changePagination","current","total","length","fetchUserListFailure","Paginator","userState","useSelector","state","usersReducer","pagination","useDispatch","marginTop","textAlign","Pagination","onChange","onHandleChange","showSizeChanger","simple","deleteUser","id","delete","_ref","isVisible","handleModalClose","userData","isModalOpen","setIsModalOpen","useState","isEditMode","setIsEditMode","form","Form","useForm","getUserById","useCallback","user","setFieldsValue","fname","first_name","lname","last_name","email","profileUrl","avatar","finally","disableLoading","useEffect","resetFields","handleCancel","_Fragment","Modal","forceRender","onCancel","footer","layout","autoComplete","onFinish","values","_objectSpread","undefined","put","Item","name","label","normalize","v","trim","rules","required","min","max","pattern","Input","placeholder","maxLength","validator","_","value","u","URL","protocol","_unused","Flex","gap","htmlType","CardUserList","setData","visible","setVisible","selectedUserId","setSelectedUserId","Space","direction","backgroundColor","width","wrap","map","background","borderRadius","minWidth","position","src","alt","height","objectFit","shape","handleEdit","EditOutlined","handleDelete","DeleteOutlined","CreateUser","Search","TableHeader","tableLayout","setTableLayout","React","searchText","setSearchText","debouncedSearch","useDebounce","DEBOUNCE_DELAY","skipNextDebounce","useRef","gridView","changeSearchText","onSearch","_userState$pagination","target","enterButton","allowClear","maxWidth","paddingRight","paddingLeft","Radio","newLayout","changeGridView","TableOutlined","UnorderedListOutlined","UserList","columns","dataIndex","render","url","marginLeft","sorter","text","record","color","cursor","Table","rowKey","dataSource","handleTableChange","_pagination","_filters","order","field","columnKey","sorted","sort","a","b","_a$field","_b$field","aVal","bVal","toLowerCase","localeCompare","String","reverse","Users","didFetchRef","minHeight","FullPageLoader","loading"],"sourceRoot":""}