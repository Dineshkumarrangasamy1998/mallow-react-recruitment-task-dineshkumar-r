{"version":3,"file":"static/js/471.e5575f90.chunk.js","mappings":"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","sources":["hooks/notification.tsx","services/interceptors/index.ts","services/login-services/index.ts","components/login/index.tsx","utils/endpoints.ts"],"sourcesContent":["import { notification } from \"antd\";\r\n\r\ntype NotificationType = 'success' | 'info' | 'warning' | 'error';\r\n\r\nexport function useAppNotification() {\r\n\tconst [api, contextHolder] = notification.useNotification();\r\n\r\n\tconst open = (\r\n\t\ttype: NotificationType,\r\n\t\topts?: { message?: string; description?: string; duration?: number }\r\n\t) => {\r\n\t\tapi[type]({\r\n\t\t\tmessage: opts?.message ?? \"Notification\",\r\n\t\t\tdescription: opts?.description ?? \"\",\r\n\t\t\tduration: opts?.duration ?? 4.5,\r\n\t\t});\r\n\t};\r\n\r\n\treturn { api, contextHolder, open };\r\n}","import axios from \"axios\";\r\nimport { logout } from \"../login-services\";\r\nimport Constants from \"../../utils/constants\";\r\n\r\n//creating a common interceptor\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\n// Request Interceptor: Add Authorization token to headers\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(Constants.TOKEN_KEY);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n    config.headers[\"x-api-key\"] = process.env.REACT_APP_API_KEY || \"\";\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response Interceptor: Handle global errors (e.g., 401 Unauthorized)\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      console.log(\"Unauthorized request, redirecting to login...\");\r\n      logout();\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { LoginPayload } from \"../../model/Login\";\r\nimport Constants from \"../../utils/constants\";\r\nimport Endpoints from \"../../utils/endpoints\";\r\nimport axiosInstance from \"../interceptors\";\r\n\r\n//API call with promise handle & error handling\r\nconst handleLogin = (loginData: LoginPayload): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosInstance\r\n      .post(Endpoints.login, loginData)\r\n      .then((response) => {\r\n        const token = response?.data?.token;\r\n        if (token) {\r\n          localStorage.setItem(Constants.TOKEN_KEY, token);\r\n          localStorage.setItem(\"user\", JSON.stringify(loginData.username));\r\n          resolve(token);\r\n        } else {\r\n          reject(new Error(\"Login succeeded but no token returned\"));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n//create new user API call\r\nconst createUser = (payload: {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  avatar: string;\r\n}): Promise<any> => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosInstance\r\n      .post(Endpoints.users, { data: payload })\r\n      .then((response) => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\n//logout api call\r\nconst logout = (): void => {\r\n  axiosInstance\r\n    .post(Endpoints.logout)\r\n    .then(() => {\r\n      localStorage.removeItem(Constants.TOKEN_KEY);\r\n      window.location.href = \"https://dineshkumarrangasamy1998.github.io/mallow_react_task_dineshkumar/\";\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Logout failed:\", error);\r\n    });\r\n};\r\n\r\nexport { handleLogin, createUser, logout };\r\n","import React from \"react\";\r\nimport { Button, Card, Checkbox, Col, Flex, Form, Input, Row } from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\nimport { LockOutlined } from \"@ant-design/icons\";\r\nimport { handleLogin } from \"../../services/login-services\";\r\nimport FullPageLoader from \"../common/Loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppNotification } from \"../../hooks/notification\";\r\n\r\nconst Login: React.FC = () => {\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const navigation = useNavigate();\r\n  const [form] = Form.useForm();\r\n  const { contextHolder, open } = useAppNotification();\r\n\r\n  // form submit\r\n  const onFinish = (values: any) => {\r\n    setLoading(true);\r\n    handleLogin(values)\r\n      .then(() => {\r\n        setLoading(false);\r\n        navigation(\"/users\");\r\n      })\r\n      .catch(() => {\r\n        open(\"error\", { message: \"Invalid username or password\" });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      {contextHolder}\r\n      <FullPageLoader visible={loading} />\r\n      <Row\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"100vh\", background: \"#f5f5f5\" }}\r\n      >\r\n        <Col xs={22} sm={16} md={12} lg={8} xl={6}>\r\n          <Card\r\n            title=\"\"\r\n            variant=\"borderless\"\r\n            style={{ width: \"fit-content\", margin: \"auto\" }}\r\n          >\r\n            <Form\r\n              form={form}\r\n              name=\"horizontal_login\"\r\n              layout=\"inline\"\r\n              onFinish={onFinish}\r\n              initialValues={{ remember: true }}\r\n              style={{ width: \"100%\", margin: \"auto\", gap: \"20px\" }}\r\n            >\r\n              <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"Username is required\" },\r\n                  {\r\n                    pattern: /^[\\w.%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\r\n                    message: \"Username must be a valid email format\",\r\n                  },\r\n                ]}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Password is required\" },\r\n                  {\r\n                    pattern: /^[A-Za-z0-9]{8,}$/,\r\n                    message:\r\n                      \"Password must be at least 8 characters, letters/numbers only\",\r\n                  },\r\n                ]}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined />}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Flex justify=\"flex-start\" align=\"center\">\r\n                  <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                  </Form.Item>\r\n                </Flex>\r\n              </Form.Item>\r\n              <Form.Item style={{ width: \"100%\" }}>\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Log in\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// API endpoints\r\nconst Endpoints = {\r\n  login: \"/login\",\r\n  users: \"/users\",\r\n  logout: \"/logout\",\r\n};\r\n\r\nexport default Endpoints;\r\n"],"names":["useAppNotification","api","contextHolder","notification","useNotification","open","type","opts","_opts$message","_opts$description","_opts$duration","message","description","duration","axiosInstance","axios","create","baseURL","process","interceptors","request","use","config","token","localStorage","getItem","Constants","TOKEN_KEY","headers","Authorization","concat","error","Promise","reject","response","status","console","log","logout","handleLogin","loginData","resolve","post","Endpoints","login","then","_response$data","data","setItem","JSON","stringify","username","Error","catch","createUser","payload","users","removeItem","window","location","href","Login","loading","setLoading","React","navigation","useNavigate","form","Form","useForm","_jsxs","children","_jsx","FullPageLoader","visible","Row","justify","align","style","minHeight","background","Col","xs","sm","md","lg","xl","Card","title","variant","width","margin","name","layout","onFinish","values","finally","initialValues","remember","gap","Item","rules","required","pattern","Input","prefix","UserOutlined","placeholder","LockOutlined","Flex","valuePropName","noStyle","Checkbox","Button","block","htmlType"],"sourceRoot":""}